version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: canner_postgres
    environment:
      POSTGRES_DB: canner_dev
      POSTGRES_USER: developer
      POSTGRES_PASSWORD: devpassword
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./database/seed.sql:/docker-entrypoint-initdb.d/02-seed.sql
    networks:
      - canner_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U developer -d canner_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Backend Flask Application
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: canner_backend
    environment:
      - DATABASE_URL=postgresql://developer:devpassword@postgres:5432/canner_dev
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - FLASK_APP=app.py  
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - /app/__pycache__
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - canner_network
    restart: unless-stopped
    # Self-retryable app - no wait script needed!
    command: ["python", "app.py"]

  prometheus:
    image: prom/prometheus:latest
    container_name: canner_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    depends_on:
      - backend
    networks:
      - canner_network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: canner_grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./monitoring/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    depends_on:
      - prometheus
    networks:
      - canner_network
    restart: unless-stopped

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: canner_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@canner.dev
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - canner_network
    profiles:
      - admin

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  canner_network:
    driver: bridge